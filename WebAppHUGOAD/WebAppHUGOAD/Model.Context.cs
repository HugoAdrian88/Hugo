//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebAppHUGOAD
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HUGOEntities : DbContext
    {
        public HUGOEntities()
            : base("name=HUGOEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<USUARIO> USUARIOS { get; set; }
    
        public virtual int Sp_DeleteUser(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DeleteUser", idParameter);
        }
    
        public virtual ObjectResult<Sp_GetUsers_Result> Sp_GetUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetUsers_Result>("Sp_GetUsers");
        }
    
        public virtual int Sp_InsertUser(string nombre_usuario, string usuario, string contrasena, string permisos)
        {
            var nombre_usuarioParameter = nombre_usuario != null ?
                new ObjectParameter("nombre_usuario", nombre_usuario) :
                new ObjectParameter("nombre_usuario", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            var permisosParameter = permisos != null ?
                new ObjectParameter("permisos", permisos) :
                new ObjectParameter("permisos", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsertUser", nombre_usuarioParameter, usuarioParameter, contrasenaParameter, permisosParameter);
        }
    
        public virtual int Sp_UpdateUser(Nullable<int> id, string nombre_usuario, string usuario, string contrasena, string permisos)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombre_usuarioParameter = nombre_usuario != null ?
                new ObjectParameter("nombre_usuario", nombre_usuario) :
                new ObjectParameter("nombre_usuario", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            var permisosParameter = permisos != null ?
                new ObjectParameter("permisos", permisos) :
                new ObjectParameter("permisos", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_UpdateUser", idParameter, nombre_usuarioParameter, usuarioParameter, contrasenaParameter, permisosParameter);
        }
    }
}
